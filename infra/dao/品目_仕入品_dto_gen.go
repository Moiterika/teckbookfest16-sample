// Code generated by xlsx2go.go; DO NOT EDIT.

package dao

import (
	"encoding/json"
	decimal "github.com/shopspring/decimal"
	types "techbookfest16-sample/domain/types"
)

type Dto品目仕入品 struct {
	FldID       Id                 `json:"ID"`
	Fld標準単価     decimal.Decimal    `json:"標準単価"`
	Fld標準単価通貨ID types.CurrencyUnit `json:"標準単価通貨ID"`
	Fld標準単価単位ID types.Unit         `json:"標準単価単位ID"`

	rowState DataRowState
	Ub       *ub品目仕入品 `json:"-"`
}

func (d Dto品目仕入品) TableName() string {
	return "品目_仕入品"
}
func (d Dto品目仕入品) RowState() DataRowState {
	return d.rowState
}

// Import はDto品目仕入品型に主キー以外を上書きする。
func (d *Dto品目仕入品) Import(標準単価 decimal.Decimal, 標準単価通貨ID types.CurrencyUnit, 標準単価単位ID types.Unit) {
	// 項目がすべて一致していたら、何もしない
	if d.Fld標準単価 == 標準単価 && d.Fld標準単価通貨ID == 標準単価通貨ID && d.Fld標準単価単位ID == 標準単価単位ID {
		return
	}
	if d.Fld標準単価 != 標準単価 {
		d.Fld標準単価 = 標準単価
		d.Ub.Set(Tbl品目仕入品().Fld標準単価(), 標準単価)
	}
	if d.Fld標準単価通貨ID != 標準単価通貨ID {
		d.Fld標準単価通貨ID = 標準単価通貨ID
		d.Ub.Set(Tbl品目仕入品().Fld標準単価通貨ID(), 標準単価通貨ID)
	}
	if d.Fld標準単価単位ID != 標準単価単位ID {
		d.Fld標準単価単位ID = 標準単価単位ID
		d.Ub.Set(Tbl品目仕入品().Fld標準単価単位ID(), 標準単価単位ID)
	}

}

// jsonKey品目仕入品 はロギング用jsonのキー。主キー項目
type jsonKey品目仕入品 struct {
	FldID Id `json:"ID"`
}

// jsonKey はロギング用jsonのキーを生成するメソッド。
func (d *Dto品目仕入品) jsonKey() jsonKey品目仕入品 {
	return jsonKey品目仕入品{FldID: d.FldID}
}

type json品目仕入品 struct {
	RowState string       `json:"row_state"`
	K        jsonKey品目仕入品 `json:"k"`
	V        *Dto品目仕入品    `json:"v,omitempty"`
}

// ToJson はMarshalJSONと同じ機能を提供するメソッド。しかし、無限ループを防ぐため、別名メソッドにしてある。
func (d *Dto品目仕入品) ToJson() ([]byte, error) {
	switch d.rowState {
	case Modified:
		j := make(map[string]interface{})
		j["row_state"] = d.rowState.String()
		j["k"] = map[string]interface{}{"ID": d.FldID}
		j["v"] = d.Ub.copyMap()
		return json.Marshal(j)
	case Deleted:
		return json.Marshal(json品目仕入品{
			K:        d.jsonKey(),
			RowState: d.rowState.String(),
			V:        nil,
		})
	default:
		return json.Marshal(json品目仕入品{
			K:        d.jsonKey(),
			RowState: d.rowState.String(),
			V:        d,
		})
	}
}
