// Code generated by xlsx2go.go; DO NOT EDIT.

package dao

import "fmt"

type ebリソース変更履歴joinリソース変更履歴アップロード時 struct {
	wb Wbリソース変更履歴アップロード時
}

func NewEbリソース変更履歴joinリソース変更履歴アップロード時() *ebリソース変更履歴joinリソース変更履歴アップロード時 {
	return &ebリソース変更履歴joinリソース変更履歴アップロード時{wb: NewWbリソース変更履歴アップロード時()}
}
func (eb *ebリソース変更履歴joinリソース変更履歴アップロード時) And(field fldリソース変更履歴アップロード時, op whereBuilderOperater, val interface{}) Ebリソース変更履歴 {
	eb.wb.And(field, op, val)
	return eb
}
func (eb *ebリソース変更履歴joinリソース変更履歴アップロード時) buildEbリソース変更履歴(argCntStart ...int) (where Where) {
	where = eb.wb.build(argCntStart...)
	where.w = fmt.Sprintf(" AND EXISTS (SELECT * FROM \"リソース変更履歴_アップロード時\" WHERE \"リソース変更履歴_アップロード時\".\"No\" = \"リソース変更履歴\".\"No\" %s)", where.w)
	return
}
